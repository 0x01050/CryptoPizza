{
  "contractName": "OTRCPartyToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDividendPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "dividendsOwing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"dividendsOwing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDividendPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dividendsOwing(address)\":{\"notice\":\"new dividend = totalDividendPoints - investor's lastDividnedPoint ( balance * new dividend ) / points multiplier*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Work/ShingHoTan/crypto-pizza-master/CryptoPizza/contracts/OTRCPartyToken.sol\":\"OTRCPartyToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Work/ShingHoTan/crypto-pizza-master/CryptoPizza/contracts/OTRCPartyToken.sol\":{\"keccak256\":\"0xd8906591f7a40b72e4b9286a4e0bd4d66781e24f99aca809426dbf15e2f1a0f5\",\"license\":\"GNU GPL v.3\",\"urls\":[\"bzz-raw://0ced194bea3b65bbe601eb4312ad4a2054315700523421bd00b77cdcf75f37f4\",\"dweb:/ipfs/QmRwrL1SABEHx4kVmL21bk7tjzB8n3tjJZTjYjRj1EBvsJ\"]},\"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol\":{\"keccak256\":\"0x9b463d8f31c9eba790d4c0c1de35fc26873e65448b2eb42169e5ca93d5b34196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea5b0d93ebdffb5a376a2efae3a82fab71a9bf476dc6461893857dfa0f92e57\",\"dweb:/ipfs/QmW2o2d8h2SR3QFZL1fpVgpEwWFHLVjnKWAjD2kNYhvmsM\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x919370e85e18f896ac9074e780582795eceb6d08313f89b89cfa94b48f547ccf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://751af94918f396f181b2337ea49b6cad408ae38e31fe96dc69c33fa5dfe64108\",\"dweb:/ipfs/Qmdwbdh6ej4J282hbpiR3bhrgQQJavgtkw4A6y6cFX7srf\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd10cc43bee430cc5e2536b8162e177167ae59800ab46b6ba5471e49238ba4b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07ba3126ecd8c527b2098c2ce61349597b73f966e694bd02388da812ce1a6fb9\",\"dweb:/ipfs/QmTXvHhXSZ6Hon7QN8fzzVjPL8iusAuvhh76PkP5DgxnqU\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xccdbc30265a1b00f6b60ddbad57c5286d101e547dbb6eb971ceedeea1b3c5887\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c2b1fe2a573a4603d5cda678d889babfdc67a929dd86927b8c605643ad37592\",\"dweb:/ipfs/QmS3DbcY2R9kFgHFcp91dZ5yD8PPsP5rDdU5nBvzed8wZp\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xbad15c70d6a03f0d363cc0a21ec325a8320b985518badd312e75fb98b4c832e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28862a69f6f08777a090c6bc330b385ef6563183efabd84d7ba81b279393029e\",\"dweb:/ipfs/QmY264LRXj7vNEMPs9QqmS2ViEK51MZC77J8WtMdDwtd3S\"]}},\"version\":1}",
  "bytecode": "0x608060405260006065556000606655633b9aca0060675573751a2016d88040b43dc623e662ff2b7693d9a35a606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200007857600080fd5b50620000896200008f60201b60201c565b62000986565b600060019054906101000a900460ff1680620000b75750620000b6620002c360201b60201c565b5b80620000ce575060008054906101000a900460ff16155b62000125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806200292b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801562000176576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620001f26040518060400160405280600e81526020017f4f5452435061727479546f6b656e0000000000000000000000000000000000008152506040518060400160405280600681526020017f4f54524350540000000000000000000000000000000000000000000000000000815250620002da60201b60201c565b6200020d3368049b9caa8f68d910006200040a60201b60201c565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef68049b9caa8f68d910006040518082815260200191505060405180910390a38015620002c05760008060016101000a81548160ff0219169083151502179055505b50565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff168062000302575062000301620002c360201b60201c565b5b8062000319575060008054906101000a900460ff16155b62000370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806200292b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015620003c1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620003d1620005ea60201b60201c565b620003e38383620006f660201b60201c565b8015620004055760008060016101000a81548160ff0219169083151502179055505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620004ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620004c2600083836200085260201b60201c565b620004de816035546200085760201b620010471790919060201c565b6035819055506200053d81603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200085760201b620010471790919060201c565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060019054906101000a900460ff168062000612575062000611620002c360201b60201c565b5b8062000629575060008054906101000a900460ff16155b62000680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806200292b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015620006d1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620006f35760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200071e57506200071d620002c360201b60201c565b5b8062000735575060008054906101000a900460ff16155b6200078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806200292b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015620007dd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260369080519060200190620007f5929190620008e0565b5081603790805190602001906200080e929190620008e0565b506012603860006101000a81548160ff021916908360ff16021790555080156200084d5760008060016101000a81548160ff0219169083151502179055505b505050565b505050565b600080828401905083811015620008d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200092357805160ff191683800117855562000954565b8280016001018555821562000954579182015b828111156200095357825182559160200191906001019062000936565b5b50905062000963919062000967565b5090565b5b808211156200098257600081600090555060010162000968565b5090565b611f9580620009966000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638129fc1c11610097578063a457c2d711610066578063a457c2d7146104b2578063a87430ba14610516578063a9059cbb14610575578063dd62ed3e146105d957610100565b80638129fc1c146103995780638391e45c146103a35780638da5cb5b146103fb57806395d89b411461042f57610100565b80632e1a7d4d116100d35780632e1a7d4d1461028e578063313ce567146102bc57806339509351146102dd57806370a082311461034157610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec57806323b872dd1461020a575b600080fd5b61010d610651565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f3565b60405180821515815260200191505060405180910390f35b6101f4610711565b6040518082815260200191505060405180910390f35b6102766004803603606081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071b565b60405180821515815260200191505060405180910390f35b6102ba600480360360208110156102a457600080fd5b81019080803590602001909291905050506107f4565b005b6102c46108d9565b604051808260ff16815260200191505060405180910390f35b610329600480360360408110156102f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f0565b60405180821515815260200191505060405180910390f35b6103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a3565b6040518082815260200191505060405180910390f35b6103a16109ec565b005b6103e5600480360360208110156103b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c02565b6040518082815260200191505060405180910390f35b610403610de9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610437610e0f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047757808201518184015260208101905061045c565b50505050905090810190601f1680156104a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fe600480360360408110156104c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb1565b60405180821515815260200191505060405180910390f35b6105586004803603602081101561052c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7e565b604051808381526020018281526020019250505060405180910390f35b6105c16004803603604081101561058b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fa2565b60405180821515815260200191505060405180910390f35b61063b600480360360408110156105ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc0565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050905090565b60006107076107006110cf565b84846110d7565b6001905092915050565b6000603554905090565b60006107288484846112ce565b6107e9846107346110cf565b6107e485604051806060016040528060288152602001611eca60289139603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061079a6110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b6110d7565b600190509392505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084e57600080fd5b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146108ce576040519150601f19603f3d011682016040523d82523d6000602084013e6108d3565b606091505b50505050565b6000603860009054906101000a900460ff16905090565b60006109996108fd6110cf565b84610994856034600061090e6110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b6110d7565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff1680610a0b5750610a0a611653565b5b80610a21575060008054906101000a900460ff16155b610a76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610ac6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b3a6040518060400160405280600e81526020017f4f5452435061727479546f6b656e0000000000000000000000000000000000008152506040518060400160405280600681526020017f4f5452435054000000000000000000000000000000000000000000000000000081525061166a565b610b4d3368049b9caa8f68d9100061177c565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef68049b9caa8f68d910006040518082815260200191505060405180910390a38015610bff5760008060016101000a81548160ff0219169083151502179055505b50565b6000336000610c1082610c02565b90506000811115610d1b57610c308160665461194590919063ffffffff16565b606681905550610c8b81606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461104790919063ffffffff16565b606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550606554606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b6000610d74606960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460655461194590919063ffffffff16565b9050610ddf606754610dd183606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461198f90919063ffffffff16565b611a1590919063ffffffff16565b9350505050919050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060378054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b5050505050905090565b6000610f74610ebe6110cf565b84610f6f85604051806060016040528060258152602001611f3b6025913960346000610ee86110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b6110d7565b6001905092915050565b60696020528060005260406000206000915090508060000154908060010154905082565b6000610fb6610faf6110cf565b84846112ce565b6001905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284019050838110156110c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561115d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611f176024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e336022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611354576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611ef26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e106023913960400191505060405180910390fd5b6113e5838383611a5f565b61145181604051806060016040528060268152602001611e5560269139603360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114e681603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116055780820151818401526020810190506115ea565b50505050905090810190601f1680156116325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff16806116895750611688611653565b5b8061169f575060008054906101000a900460ff16155b6116f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611744576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61174c611a64565b6117568383611b62565b80156117775760008060016101000a81548160ff0219169083151502179055505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61182b60008383611a5f565b6118408160355461104790919063ffffffff16565b60358190555061189881603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061198783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611593565b905092915050565b6000808314156119a25760009050611a0f565b60008284029050828482816119b357fe5b0414611a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611ea96021913960400191505060405180910390fd5b809150505b92915050565b6000611a5783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611cac565b905092915050565b505050565b600060019054906101000a900460ff1680611a835750611a82611653565b5b80611a99575060008054906101000a900460ff16155b611aee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b3e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015611b5f5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611b815750611b80611653565b5b80611b97575060008054906101000a900460ff16155b611bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c3c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260369080519060200190611c52929190611d72565b508160379080519060200190611c69929190611d72565b506012603860006101000a81548160ff021916908360ff1602179055508015611ca75760008060016101000a81548160ff0219169083151502179055505b505050565b60008083118290611d58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d1d578082015181840152602081019050611d02565b50505050905090810190601f168015611d4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611d6457fe5b049050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611db357805160ff1916838001178555611de1565b82800160010185558215611de1579182015b82811115611de0578251825591602001919060010190611dc5565b5b509050611dee9190611df2565b5090565b5b80821115611e0b576000816000905550600101611df3565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122059b25e2b14986d93394fd672dc68e5bd5c5b881769bd1f2eab21efc91e7852bc64736f6c634300060c0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638129fc1c11610097578063a457c2d711610066578063a457c2d7146104b2578063a87430ba14610516578063a9059cbb14610575578063dd62ed3e146105d957610100565b80638129fc1c146103995780638391e45c146103a35780638da5cb5b146103fb57806395d89b411461042f57610100565b80632e1a7d4d116100d35780632e1a7d4d1461028e578063313ce567146102bc57806339509351146102dd57806370a082311461034157610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ec57806323b872dd1461020a575b600080fd5b61010d610651565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f3565b60405180821515815260200191505060405180910390f35b6101f4610711565b6040518082815260200191505060405180910390f35b6102766004803603606081101561022057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071b565b60405180821515815260200191505060405180910390f35b6102ba600480360360208110156102a457600080fd5b81019080803590602001909291905050506107f4565b005b6102c46108d9565b604051808260ff16815260200191505060405180910390f35b610329600480360360408110156102f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108f0565b60405180821515815260200191505060405180910390f35b6103836004803603602081101561035757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a3565b6040518082815260200191505060405180910390f35b6103a16109ec565b005b6103e5600480360360208110156103b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c02565b6040518082815260200191505060405180910390f35b610403610de9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610437610e0f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047757808201518184015260208101905061045c565b50505050905090810190601f1680156104a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fe600480360360408110156104c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb1565b60405180821515815260200191505060405180910390f35b6105586004803603602081101561052c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7e565b604051808381526020018281526020019250505060405180910390f35b6105c16004803603604081101561058b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fa2565b60405180821515815260200191505060405180910390f35b61063b600480360360408110156105ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc0565b6040518082815260200191505060405180910390f35b606060368054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e95780601f106106be576101008083540402835291602001916106e9565b820191906000526020600020905b8154815290600101906020018083116106cc57829003601f168201915b5050505050905090565b60006107076107006110cf565b84846110d7565b6001905092915050565b6000603554905090565b60006107288484846112ce565b6107e9846107346110cf565b6107e485604051806060016040528060288152602001611eca60289139603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061079a6110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b6110d7565b600190509392505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084e57600080fd5b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146108ce576040519150601f19603f3d011682016040523d82523d6000602084013e6108d3565b606091505b50505050565b6000603860009054906101000a900460ff16905090565b60006109996108fd6110cf565b84610994856034600061090e6110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b6110d7565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060019054906101000a900460ff1680610a0b5750610a0a611653565b5b80610a21575060008054906101000a900460ff16155b610a76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610ac6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b3a6040518060400160405280600e81526020017f4f5452435061727479546f6b656e0000000000000000000000000000000000008152506040518060400160405280600681526020017f4f5452435054000000000000000000000000000000000000000000000000000081525061166a565b610b4d3368049b9caa8f68d9100061177c565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef68049b9caa8f68d910006040518082815260200191505060405180910390a38015610bff5760008060016101000a81548160ff0219169083151502179055505b50565b6000336000610c1082610c02565b90506000811115610d1b57610c308160665461194590919063ffffffff16565b606681905550610c8b81606960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461104790919063ffffffff16565b606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550606554606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b6000610d74606960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460655461194590919063ffffffff16565b9050610ddf606754610dd183606960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461198f90919063ffffffff16565b611a1590919063ffffffff16565b9350505050919050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060378054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b5050505050905090565b6000610f74610ebe6110cf565b84610f6f85604051806060016040528060258152602001611f3b6025913960346000610ee86110cf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b6110d7565b6001905092915050565b60696020528060005260406000206000915090508060000154908060010154905082565b6000610fb6610faf6110cf565b84846112ce565b6001905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284019050838110156110c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561115d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611f176024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e336022913960400191505060405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611354576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611ef26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e106023913960400191505060405180910390fd5b6113e5838383611a5f565b61145181604051806060016040528060268152602001611e5560269139603360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115939092919063ffffffff16565b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114e681603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116055780820151818401526020810190506115ea565b50505050905090810190601f1680156116325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff16806116895750611688611653565b5b8061169f575060008054906101000a900460ff16155b6116f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611744576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61174c611a64565b6117568383611b62565b80156117775760008060016101000a81548160ff0219169083151502179055505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561181f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61182b60008383611a5f565b6118408160355461104790919063ffffffff16565b60358190555061189881603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461104790919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600061198783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611593565b905092915050565b6000808314156119a25760009050611a0f565b60008284029050828482816119b357fe5b0414611a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611ea96021913960400191505060405180910390fd5b809150505b92915050565b6000611a5783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611cac565b905092915050565b505050565b600060019054906101000a900460ff1680611a835750611a82611653565b5b80611a99575060008054906101000a900460ff16155b611aee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b3e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015611b5f5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611b815750611b80611653565b5b80611b97575060008054906101000a900460ff16155b611bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611e7b602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611c3c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260369080519060200190611c52929190611d72565b508160379080519060200190611c69929190611d72565b506012603860006101000a81548160ff021916908360ff1602179055508015611ca75760008060016101000a81548160ff0219169083151502179055505b505050565b60008083118290611d58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d1d578082015181840152602081019050611d02565b50505050905090810190601f168015611d4a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611d6457fe5b049050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611db357805160ff1916838001178555611de1565b82800160010185558215611de1579182015b82811115611de0578251825591602001919060010190611dc5565b5b509050611dee9190611df2565b5090565b5b80821115611e0b576000816000905550600101611df3565b509056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122059b25e2b14986d93394fd672dc68e5bd5c5b881769bd1f2eab21efc91e7852bc64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "228:2159:0:-:0;;;353:1;323:31;;390:1;361:30;;424:10;398:36;;472:42;441:73;;;;;;;;;;;;;;;;;;;;1141:46;;;;;;;;;;1171:12;:10;;;:12;;:::i;:::-;228:2159;;1193:198;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;;;:16;;:::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;1245:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;;;:39;;:::i;:::-;1295:31;1301:10;1313:12;1295:5;;;:31;;:::i;:::-;1363:5;;;;;;;;;;;1342:41;;1359:1;1342:41;;;1370:12;1342:41;;;;;;;;;;;;;;;;;;1798:14:3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;1193:198:0;:::o;1962:604:3:-;2010:4;2381:12;2404:4;2381:28;;2420:10;2527:4;2515:17;2509:23;;2557:1;2551:2;:7;2544:14;;;;1962:604;:::o;2143:181:4:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;;;:16;;:::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;2241:26:4::1;:24;;;:26;;:::i;:::-;2278:38;2301:5;2308:7;2278:22;;;:38;;:::i;:::-;1798:14:3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;2143:181:4;;;:::o;8372:378::-;8475:1;8456:21;;:7;:21;;;;8448:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8526:49;8555:1;8559:7;8568:6;8526:20;;;:49;;:::i;:::-;8603:24;8620:6;8603:12;;:16;;;;;;:24;;;;:::i;:::-;8588:12;:39;;;;8659:30;8682:6;8659:9;:18;8669:7;8659:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8638:9;:18;8648:7;8638:18;;;;;;;;;;;;;;;:51;;;;8726:7;8705:37;;8722:1;8705:37;;;8735:6;8705:37;;;;;;;;;;;;;;;;;;8372:378;;:::o;779:65:1:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;;;:16;;:::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;1798:14;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;779:65:1;:::o;2332:182:4:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;;;:16;;:::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;2448:5:4::1;2440;:13;;;;;;;;;;;;:::i;:::-;;2474:7;2464;:17;;;;;;;;;;;;:::i;:::-;;2504:2;2492:9;;:14;;;;;;;;;;;;;;;;;;1798::3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;2332:182:4;;;:::o;11310:92::-;;;;:::o;921:181:2:-;979:7;999:9;1015:1;1011;:5;999:17;;1040:1;1035;:6;;1027:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:1;1086:8;;;921:181;;;;:::o;228:2159:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "228:2159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:83:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3659:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5341:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2260:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3511:83:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6071:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3822:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1193:198:0;;;:::i;:::-;;1540:388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;441:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2786:87:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6792:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;615:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4154:175:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4392:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2584:83;2621:13;2654:5;2647:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:83;:::o;4690:169::-;4773:4;4790:39;4799:12;:10;:12::i;:::-;4813:7;4822:6;4790:8;:39::i;:::-;4847:4;4840:11;;4690:169;;;;:::o;3659:100::-;3712:7;3739:12;;3732:19;;3659:100;:::o;5341:321::-;5447:4;5464:36;5474:6;5482:9;5493:6;5464:9;:36::i;:::-;5511:121;5520:6;5528:12;:10;:12::i;:::-;5542:89;5580:6;5542:89;;;;;;;;;;;;;;;;;:11;:19;5554:6;5542:19;;;;;;;;;;;;;;;:33;5562:12;:10;:12::i;:::-;5542:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5511:8;:121::i;:::-;5650:4;5643:11;;5341:321;;;;;:::o;2260:124:0:-;2330:5;;;;;;;;;;;2316:19;;:10;:19;;;2308:28;;;;;;2347:5;;;;;;;;;;;:10;;2365:6;2347:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:124;:::o;3511:83:4:-;3552:5;3577:9;;;;;;;;;;;3570:16;;3511:83;:::o;6071:218::-;6159:4;6176:83;6185:12;:10;:12::i;:::-;6199:7;6208:50;6247:10;6208:11;:25;6220:12;:10;:12::i;:::-;6208:25;;;;;;;;;;;;;;;:34;6234:7;6208:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;6176:8;:83::i;:::-;6277:4;6270:11;;6071:218;;;;:::o;3822:119::-;3888:7;3915:9;:18;3925:7;3915:18;;;;;;;;;;;;;;;;3908:25;;3822:119;;;:::o;1193:198:0:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;:16::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;1245:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:39::i;:::-;1295:31;1301:10;1313:12;1295:5;:31::i;:::-;1363:5;;;;;;;;;;;1342:41;;1359:1;1342:41;;;1370:12;1342:41;;;;;;;;;;;;;;;;;;1798:14:3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;1193:198:0;:::o;1540:388::-;1652:7;1622:10;796:13;812:24;827:8;812:14;:24::i;:::-;796:40;;859:1;851:5;:9;847:270;;;898:29;921:5;898:18;;:22;;:29;;;;:::i;:::-;877:18;:50;;;;968:66;1014:5;968;:15;974:8;968:15;;;;;;;;;;;;;;;:23;;;:27;;:66;;;;:::i;:::-;942:5;:15;948:8;942:15;;;;;;;;;;;;;;;:23;;:92;;;;1086:19;;1049:5;:15;1055:8;1049:15;;;;;;;;;;;;;;;:34;;:56;;;;847:270;1677:25:::1;1705:83;1743:5;:15;1749:8;1743:15;;;;;;;;;;;;;;;:34;;;1705:19;;:23;;:83;;;;:::i;:::-;1677:111;;1819:101;1890:15;;1820:46;1848:17;1820:5;:15;1826:8;1820:15;;;;;;;;;;;;;;;:23;;;:27;;:46;;;;:::i;:::-;1819:52;;:101;;;;:::i;:::-;1799:121;;;1540:388:::0;;;;;:::o;441:73::-;;;;;;;;;;;;;:::o;2786:87:4:-;2825:13;2858:7;2851:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2786:87;:::o;6792:269::-;6885:4;6902:129;6911:12;:10;:12::i;:::-;6925:7;6934:96;6973:15;6934:96;;;;;;;;;;;;;;;;;:11;:25;6946:12;:10;:12::i;:::-;6934:25;;;;;;;;;;;;;;;:34;6960:7;6934:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6902:8;:129::i;:::-;7049:4;7042:11;;6792:269;;;;:::o;615:40:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4154:175:4:-;4240:4;4257:42;4267:12;:10;:12::i;:::-;4281:9;4292:6;4257:9;:42::i;:::-;4317:4;4310:11;;4154:175;;;;:::o;4392:151::-;4481:7;4508:11;:18;4520:5;4508:18;;;;;;;;;;;;;;;:27;4527:7;4508:27;;;;;;;;;;;;;;;;4501:34;;4392:151;;;;:::o;921:181:2:-;979:7;999:9;1015:1;1011;:5;999:17;;1040:1;1035;:6;;1027:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:1;1086:8;;;921:181;;;;:::o;850:106:1:-;903:15;938:10;931:17;;850:106;:::o;9939:346:4:-;10058:1;10041:19;;:5;:19;;;;10033:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10139:1;10120:21;;:7;:21;;;;10112:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10223:6;10193:11;:18;10205:5;10193:18;;;;;;;;;;;;;;;:27;10212:7;10193:27;;;;;;;;;;;;;;;:36;;;;10261:7;10245:32;;10254:5;10245:32;;;10270:6;10245:32;;;;;;;;;;;;;;;;;;9939:346;;;:::o;7551:539::-;7675:1;7657:20;;:6;:20;;;;7649:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7759:1;7738:23;;:9;:23;;;;7730:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7814:47;7835:6;7843:9;7854:6;7814:20;:47::i;:::-;7894:71;7916:6;7894:71;;;;;;;;;;;;;;;;;:9;:17;7904:6;7894:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7874:9;:17;7884:6;7874:17;;;;;;;;;;;;;;;:91;;;;7999:32;8024:6;7999:9;:20;8009:9;7999:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7976:9;:20;7986:9;7976:20;;;;;;;;;;;;;;;:55;;;;8064:9;8047:35;;8056:6;8047:35;;;8075:6;8047:35;;;;;;;;;;;;;;;;;;7551:539;;;:::o;1824:192:2:-;1910:7;1943:1;1938;:6;;1946:12;1930:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:9;1986:1;1982;:5;1970:17;;2007:1;2000:8;;;1824:192;;;;;:::o;1962:604:3:-;2010:4;2381:12;2404:4;2381:28;;2420:10;2527:4;2515:17;2509:23;;2557:1;2551:2;:7;2544:14;;;;1962:604;:::o;2143:181:4:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;:16::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;2241:26:4::1;:24;:26::i;:::-;2278:38;2301:5;2308:7;2278:22;:38::i;:::-;1798:14:3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;2143:181:4;;;:::o;8372:378::-;8475:1;8456:21;;:7;:21;;;;8448:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8526:49;8555:1;8559:7;8568:6;8526:20;:49::i;:::-;8603:24;8620:6;8603:12;;:16;;:24;;;;:::i;:::-;8588:12;:39;;;;8659:30;8682:6;8659:9;:18;8669:7;8659:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8638:9;:18;8648:7;8638:18;;;;;;;;;;;;;;;:51;;;;8726:7;8705:37;;8722:1;8705:37;;;8735:6;8705:37;;;;;;;;;;;;;;;;;;8372:378;;:::o;1385:136:2:-;1443:7;1470:43;1474:1;1477;1470:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1463:50;;1385:136;;;;:::o;2275:471::-;2333:7;2583:1;2578;:6;2574:47;;;2608:1;2601:8;;;;2574:47;2633:9;2649:1;2645;:5;2633:17;;2678:1;2673;2669;:5;;;;;;:10;2661:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2737:1;2730:8;;;2275:471;;;;;:::o;3222:132::-;3280:7;3307:39;3311:1;3314;3307:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3300:46;;3222:132;;;;:::o;11310:92:4:-;;;;:::o;779:65:1:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;:16::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;1798:14;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;779:65:1;:::o;2332:182:4:-;1506:13:3;;;;;;;;;;;:33;;;;1523:16;:14;:16::i;:::-;1506:33;:50;;;;1544:12;;;;;;;;;;1543:13;1506:50;1498:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:19;1643:13;;;;;;;;;;;1642:14;1620:36;;1671:14;1667:101;;;1718:4;1702:13;;:20;;;;;;;;;;;;;;;;;;1752:4;1737:12;;:19;;;;;;;;;;;;;;;;;;1667:101;2448:5:4::1;2440;:13;;;;;;;;;;;;:::i;:::-;;2474:7;2464;:17;;;;;;;;;;;;:::i;:::-;;2504:2;2492:9;;:14;;;;;;;;;;;;;;;;;;1798::3::0;1794:68;;;1845:5;1829:13;;:21;;;;;;;;;;;;;;;;;;1794:68;2332:182:4;;;:::o;3850:278:2:-;3936:7;3968:1;3964;:5;3971:12;3956:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:9;4011:1;4007;:5;;;;;;3995:17;;4119:1;4112:8;;;3850:278;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GNU GPL v.3\r\n\r\npragma solidity 0.6.12;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\r\n\r\ncontract OTRCPartyToken is ERC20Upgradeable {\r\n    using SafeMathUpgradeable for uint256;\r\n    uint256 totalDividendPoints = 0;\r\n    uint256 unclaimedDividends = 0;\r\n    uint256 pointMultiplier = 1000000000;\r\n    address payable public owner = 0x751a2016D88040b43Dc623e662FF2b7693d9a35a;\r\n\r\n    struct account {\r\n        uint256 balance;\r\n        uint256 lastDividendPoints;\r\n    }\r\n    mapping(address => account) public users;\r\n    modifier onlyOwner() {\r\n        require(owner == owner);\r\n        _;\r\n    }\r\n    modifier updateDividend(address investor) {\r\n        uint256 owing = dividendsOwing(investor);\r\n        if (owing > 0) {\r\n            unclaimedDividends = unclaimedDividends.sub(owing);\r\n            users[investor].balance = users[investor].balance.add(\r\n                owing\r\n            );\r\n            users[investor].lastDividendPoints = totalDividendPoints;\r\n        }\r\n        _;\r\n    }\r\n\r\n constructor() public {\r\n      initialize();\r\n}\r\n    function initialize() initializer public {\r\n        __ERC20_init(\"OTRCPartyToken\",\"OTRCPT\");\r\n        _mint(msg.sender, 8.5000001e19);\r\n        emit Transfer(address(0), owner, 8.5000001e19);\r\n    }\r\n    /**\r\n     new dividend = totalDividendPoints - investor's lastDividnedPoint\r\n     ( balance * new dividend ) / points multiplier\r\n    **/\r\n    function dividendsOwing(address investor)\r\n        public\r\n        updateDividend(msg.sender)\r\n        returns (uint256)\r\n    {\r\n        uint256 newDividendPoints = totalDividendPoints.sub(\r\n            users[investor].lastDividendPoints\r\n        );\r\n        return\r\n            (users[investor].balance.mul(newDividendPoints)).div(\r\n                pointMultiplier\r\n            );\r\n    }\r\n    // function disburse(uint256 amount) public onlyOwner {\r\n    //     totalDividendPoints = totalDividendPoints.add(\r\n    //         (amount.mul(pointMultiplier)).div(totalSupply_)\r\n    //     );\r\n    //     totalSupply_ = totalSupply_.add(amount);\r\n    //     unclaimedDividends = unclaimedDividends.add(amount);\r\n    // }\r\n   function withdraw(uint256 amount) public {\r\n    require(msg.sender == owner);\r\n        owner.call{value: amount}('');\r\n    }\r\n}",
  "sourcePath": "D:/Work/ShingHoTan/crypto-pizza-master/CryptoPizza/contracts/OTRCPartyToken.sol",
  "ast": {
    "absolutePath": "/D/Work/ShingHoTan/crypto-pizza-master/CryptoPizza/contracts/OTRCPartyToken.sol",
    "exportedSymbols": {
      "OTRCPartyToken": [
        173
      ]
    },
    "id": 174,
    "license": "GNU GPL v.3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "43:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 174,
        "sourceUnit": 1016,
        "src": "70:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 174,
        "sourceUnit": 415,
        "src": "150:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "255:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Upgradeable_$1015",
                "typeString": "contract ERC20Upgradeable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "255:16:0"
          }
        ],
        "contractDependencies": [
          218,
          485,
          1015,
          1093
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 173,
        "linearizedBaseContracts": [
          173,
          1015,
          1093,
          218,
          485
        ],
        "name": "OTRCPartyToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 414,
              "src": "285:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$414",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "279:38:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "totalDividendPoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 173,
            "src": "323:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "323:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "353:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "unclaimedDividends",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 173,
            "src": "361:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "361:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "390:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "pointMultiplier",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 173,
            "src": "398:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "424:10:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 20,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 173,
            "src": "441:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "441:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837353161323031364438383034306234334463363233653636324646326237363933643961333561",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "472:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x751a2016D88040b43Dc623e662FF2b7693d9a35a"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "OTRCPartyToken.account",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "549:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "549:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "lastDividendPoints",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "575:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "575:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "account",
            "nodeType": "StructDefinition",
            "scope": 173,
            "src": "523:86:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 29,
            "mutability": "mutable",
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 173,
            "src": "615:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
              "typeString": "mapping(address => struct OTRCPartyToken.account)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "623:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "615:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                "typeString": "mapping(address => struct OTRCPartyToken.account)"
              },
              "valueType": {
                "contractScope": null,
                "id": 27,
                "name": "account",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 25,
                "src": "634:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_account_$25_storage_ptr",
                  "typeString": "struct OTRCPartyToken.account"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "683:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "702:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "711:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "702:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "694:23:0"
                },
                {
                  "id": 37,
                  "nodeType": "PlaceholderStatement",
                  "src": "728:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 39,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:2:0"
            },
            "src": "662:75:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "785:351:0",
              "statements": [
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "owing",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 82,
                      "src": "796:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "827:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 45,
                      "name": "dividendsOwing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "812:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "796:40:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "owing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "851:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "859:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "851:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "847:270:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "862:255:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 52,
                            "name": "unclaimedDividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "877:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 55,
                                "name": "owing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "921:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 53,
                                "name": "unclaimedDividends",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "898:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 264,
                              "src": "898:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "898:29:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "877:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "877:50:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 59,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "942:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                                  "typeString": "mapping(address => struct OTRCPartyToken.account storage ref)"
                                }
                              },
                              "id": 61,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "investor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "948:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "942:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_account_$25_storage",
                                "typeString": "struct OTRCPartyToken.account storage ref"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "942:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 68,
                                "name": "owing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "1014:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 63,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "968:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                                      "typeString": "mapping(address => struct OTRCPartyToken.account storage ref)"
                                    }
                                  },
                                  "id": 65,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 64,
                                    "name": "investor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41,
                                    "src": "974:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "968:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_account_$25_storage",
                                    "typeString": "struct OTRCPartyToken.account storage ref"
                                  }
                                },
                                "id": 66,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22,
                                "src": "968:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 67,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "968:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "968:66:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "942:92:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 71,
                        "nodeType": "ExpressionStatement",
                        "src": "942:92:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 72,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1049:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                                  "typeString": "mapping(address => struct OTRCPartyToken.account storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 73,
                                "name": "investor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1055:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1049:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_account_$25_storage",
                                "typeString": "struct OTRCPartyToken.account storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastDividendPoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "1049:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "totalDividendPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1086:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1049:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1049:56:0"
                      }
                    ]
                  }
                },
                {
                  "id": 81,
                  "nodeType": "PlaceholderStatement",
                  "src": "1127:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "name": "updateDividend",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "investor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "767:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:18:0"
            },
            "src": "743:393:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "1162:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1171:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 90,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:0"
            },
            "scope": 173,
            "src": "1141:46:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1234:157:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5452435061727479546f6b656e",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:16:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ccc00cd06f2ace0f77836e4513f343209c9e70f667932498770d73ce95e288d",
                          "typeString": "literal_string \"OTRCPartyToken\""
                        },
                        "value": "OTRCPartyToken"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5452435054",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1275:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b413b19e54a88e3aedd70a1cd16d799fb0fc3856416458122abcf8d16ba063bc",
                          "typeString": "literal_string \"OTRCPT\""
                        },
                        "value": "OTRCPT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ccc00cd06f2ace0f77836e4513f343209c9e70f667932498770d73ce95e288d",
                          "typeString": "literal_string \"OTRCPartyToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b413b19e54a88e3aedd70a1cd16d799fb0fc3856416458122abcf8d16ba063bc",
                          "typeString": "literal_string \"OTRCPT\""
                        }
                      ],
                      "id": 95,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "1245:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1301:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1301:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "382e35303030303031653139",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1313:12:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_85000001000000000000_by_1",
                          "typeString": "int_const 85000001000000000000"
                        },
                        "value": "8.5000001e19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_85000001000000000000_by_1",
                          "typeString": "int_const 85000001000000000000"
                        }
                      ],
                      "id": 100,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "1295:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:31:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1359:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1351:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1351:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 111,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1363:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "382e35303030303031653139",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1370:12:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_85000001000000000000_by_1",
                          "typeString": "int_const 85000001000000000000"
                        },
                        "value": "8.5000001e19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_85000001000000000000_by_1",
                          "typeString": "int_const 85000001000000000000"
                        }
                      ],
                      "id": 106,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "1342:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "EmitStatement",
                  "src": "1337:46:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 93,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 92,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 462,
                  "src": "1215:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1215:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:2:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:0"
            },
            "scope": 173,
            "src": "1193:198:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1666:262:0",
              "statements": [
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "newDividendPoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 150,
                      "src": "1677:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1677:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1743:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                              "typeString": "mapping(address => struct OTRCPartyToken.account storage ref)"
                            }
                          },
                          "id": 134,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "1749:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1743:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_account_$25_storage",
                            "typeString": "struct OTRCPartyToken.account storage ref"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastDividendPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1743:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "totalDividendPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1705:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "1705:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1677:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "pointMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1890:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 143,
                                "name": "newDividendPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 129,
                                "src": "1848:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 138,
                                    "name": "users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "1820:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_account_$25_storage_$",
                                      "typeString": "mapping(address => struct OTRCPartyToken.account storage ref)"
                                    }
                                  },
                                  "id": 140,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 139,
                                    "name": "investor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 119,
                                    "src": "1826:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1820:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_account_$25_storage",
                                    "typeString": "struct OTRCPartyToken.account storage ref"
                                  }
                                },
                                "id": 141,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22,
                                "src": "1820:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 327,
                              "src": "1820:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1820:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1819:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 344,
                      "src": "1819:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "1799:121:0"
                }
              ]
            },
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1397:137:0",
              "text": "new dividend = totalDividendPoints - investor's lastDividnedPoint\n( balance * new dividend ) / points multiplier*"
            },
            "functionSelector": "8391e45c",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1622:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1622:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 121,
                  "name": "updateDividend",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 83,
                  "src": "1607:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:26:0"
              }
            ],
            "name": "dividendsOwing",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "investor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 151,
                  "src": "1564:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1563:18:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 151,
                  "src": "1652:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1651:9:0"
            },
            "scope": 173,
            "src": "1540:388:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2301:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2316:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2316:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "2330:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2316:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2308:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2373:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 163,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "2347:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2347:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "2365:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2347:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:29:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2278:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2277:16:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2301:0:0"
            },
            "scope": 173,
            "src": "2260:124:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 174,
        "src": "228:2159:0"
      }
    ],
    "src": "43:2344:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/Work/ShingHoTan/crypto-pizza-master/CryptoPizza/contracts/OTRCPartyToken.sol",
      "exportedSymbols": {
        "OTRCPartyToken": [
          173
        ]
      },
      "license": "GNU GPL v.3"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "43:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 1016,
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "scope": 174,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "70:78:0"
      },
      {
        "attributes": {
          "SourceUnit": 415,
          "absolutePath": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "file": "@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
          "scope": 174,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "150:74:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            218,
            485,
            1015,
            1093
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            173,
            1015,
            1093,
            218,
            485
          ],
          "name": "OTRCPartyToken",
          "scope": 174
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Upgradeable",
                  "referencedDeclaration": 1015,
                  "type": "contract ERC20Upgradeable"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "255:16:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "255:16:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMathUpgradeable",
                  "referencedDeclaration": 414,
                  "type": "library SafeMathUpgradeable"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "285:19:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7,
                "name": "ElementaryTypeName",
                "src": "309:7:0"
              }
            ],
            "id": 8,
            "name": "UsingForDirective",
            "src": "279:38:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "totalDividendPoints",
              "overrides": null,
              "scope": 173,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 9,
                "name": "ElementaryTypeName",
                "src": "323:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 10,
                "name": "Literal",
                "src": "353:1:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "323:31:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "unclaimedDividends",
              "overrides": null,
              "scope": 173,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 12,
                "name": "ElementaryTypeName",
                "src": "361:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 13,
                "name": "Literal",
                "src": "390:1:0"
              }
            ],
            "id": 14,
            "name": "VariableDeclaration",
            "src": "361:30:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "pointMultiplier",
              "overrides": null,
              "scope": 173,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 15,
                "name": "ElementaryTypeName",
                "src": "398:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "31303030303030303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 1000000000",
                  "value": "1000000000"
                },
                "id": 16,
                "name": "Literal",
                "src": "424:10:0"
              }
            ],
            "id": 17,
            "name": "VariableDeclaration",
            "src": "398:36:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "overrides": null,
              "scope": 173,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 18,
                "name": "ElementaryTypeName",
                "src": "441:15:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "307837353161323031364438383034306234334463363233653636324646326237363933643961333561",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x751a2016D88040b43Dc623e662FF2b7693d9a35a"
                },
                "id": 19,
                "name": "Literal",
                "src": "472:42:0"
              }
            ],
            "id": 20,
            "name": "VariableDeclaration",
            "src": "441:73:0"
          },
          {
            "attributes": {
              "canonicalName": "OTRCPartyToken.account",
              "name": "account",
              "scope": 173,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "549:7:0"
                  }
                ],
                "id": 22,
                "name": "VariableDeclaration",
                "src": "549:15:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "lastDividendPoints",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 23,
                    "name": "ElementaryTypeName",
                    "src": "575:7:0"
                  }
                ],
                "id": 24,
                "name": "VariableDeclaration",
                "src": "575:26:0"
              }
            ],
            "id": 25,
            "name": "StructDefinition",
            "src": "523:86:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "a87430ba",
              "mutability": "mutable",
              "name": "users",
              "overrides": null,
              "scope": 173,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct OTRCPartyToken.account)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct OTRCPartyToken.account)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 26,
                    "name": "ElementaryTypeName",
                    "src": "623:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "account",
                      "referencedDeclaration": 25,
                      "type": "struct OTRCPartyToken.account"
                    },
                    "id": 27,
                    "name": "UserDefinedTypeName",
                    "src": "634:7:0"
                  }
                ],
                "id": 28,
                "name": "Mapping",
                "src": "615:27:0"
              }
            ],
            "id": 29,
            "name": "VariableDeclaration",
            "src": "615:40:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 30,
                "name": "ParameterList",
                "src": "680:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 31,
                            "name": "Identifier",
                            "src": "694:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "address payable",
                                  "value": "owner"
                                },
                                "id": 32,
                                "name": "Identifier",
                                "src": "702:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "address payable",
                                  "value": "owner"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "711:5:0"
                              }
                            ],
                            "id": 34,
                            "name": "BinaryOperation",
                            "src": "702:14:0"
                          }
                        ],
                        "id": 35,
                        "name": "FunctionCall",
                        "src": "694:23:0"
                      }
                    ],
                    "id": 36,
                    "name": "ExpressionStatement",
                    "src": "694:23:0"
                  },
                  {
                    "id": 37,
                    "name": "PlaceholderStatement",
                    "src": "728:1:0"
                  }
                ],
                "id": 38,
                "name": "Block",
                "src": "683:54:0"
              }
            ],
            "id": 39,
            "name": "ModifierDefinition",
            "src": "662:75:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "updateDividend",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "investor",
                      "overrides": null,
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 40,
                        "name": "ElementaryTypeName",
                        "src": "767:7:0"
                      }
                    ],
                    "id": 41,
                    "name": "VariableDeclaration",
                    "src": "767:16:0"
                  }
                ],
                "id": 42,
                "name": "ParameterList",
                "src": "766:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        44
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "owing",
                          "overrides": null,
                          "scope": 82,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 43,
                            "name": "ElementaryTypeName",
                            "src": "796:7:0"
                          }
                        ],
                        "id": 44,
                        "name": "VariableDeclaration",
                        "src": "796:13:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 151,
                              "type": "function (address) returns (uint256)",
                              "value": "dividendsOwing"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "812:14:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 41,
                              "type": "address",
                              "value": "investor"
                            },
                            "id": 46,
                            "name": "Identifier",
                            "src": "827:8:0"
                          }
                        ],
                        "id": 47,
                        "name": "FunctionCall",
                        "src": "812:24:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclarationStatement",
                    "src": "796:40:0"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "owing"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "851:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 50,
                            "name": "Literal",
                            "src": "859:1:0"
                          }
                        ],
                        "id": 51,
                        "name": "BinaryOperation",
                        "src": "851:9:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14,
                                      "type": "uint256",
                                      "value": "unclaimedDividends"
                                    },
                                    "id": 52,
                                    "name": "Identifier",
                                    "src": "877:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sub",
                                          "referencedDeclaration": 264,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 14,
                                              "type": "uint256",
                                              "value": "unclaimedDividends"
                                            },
                                            "id": 53,
                                            "name": "Identifier",
                                            "src": "898:18:0"
                                          }
                                        ],
                                        "id": 54,
                                        "name": "MemberAccess",
                                        "src": "898:22:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "uint256",
                                          "value": "owing"
                                        },
                                        "id": 55,
                                        "name": "Identifier",
                                        "src": "921:5:0"
                                      }
                                    ],
                                    "id": 56,
                                    "name": "FunctionCall",
                                    "src": "898:29:0"
                                  }
                                ],
                                "id": 57,
                                "name": "Assignment",
                                "src": "877:50:0"
                              }
                            ],
                            "id": 58,
                            "name": "ExpressionStatement",
                            "src": "877:50:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "balance",
                                      "referencedDeclaration": 22,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct OTRCPartyToken.account storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 29,
                                              "type": "mapping(address => struct OTRCPartyToken.account storage ref)",
                                              "value": "users"
                                            },
                                            "id": 59,
                                            "name": "Identifier",
                                            "src": "942:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 41,
                                              "type": "address",
                                              "value": "investor"
                                            },
                                            "id": 60,
                                            "name": "Identifier",
                                            "src": "948:8:0"
                                          }
                                        ],
                                        "id": 61,
                                        "name": "IndexAccess",
                                        "src": "942:15:0"
                                      }
                                    ],
                                    "id": 62,
                                    "name": "MemberAccess",
                                    "src": "942:23:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 247,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "balance",
                                              "referencedDeclaration": 22,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct OTRCPartyToken.account storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 29,
                                                      "type": "mapping(address => struct OTRCPartyToken.account storage ref)",
                                                      "value": "users"
                                                    },
                                                    "id": 63,
                                                    "name": "Identifier",
                                                    "src": "968:5:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 41,
                                                      "type": "address",
                                                      "value": "investor"
                                                    },
                                                    "id": 64,
                                                    "name": "Identifier",
                                                    "src": "974:8:0"
                                                  }
                                                ],
                                                "id": 65,
                                                "name": "IndexAccess",
                                                "src": "968:15:0"
                                              }
                                            ],
                                            "id": 66,
                                            "name": "MemberAccess",
                                            "src": "968:23:0"
                                          }
                                        ],
                                        "id": 67,
                                        "name": "MemberAccess",
                                        "src": "968:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "uint256",
                                          "value": "owing"
                                        },
                                        "id": 68,
                                        "name": "Identifier",
                                        "src": "1014:5:0"
                                      }
                                    ],
                                    "id": 69,
                                    "name": "FunctionCall",
                                    "src": "968:66:0"
                                  }
                                ],
                                "id": 70,
                                "name": "Assignment",
                                "src": "942:92:0"
                              }
                            ],
                            "id": 71,
                            "name": "ExpressionStatement",
                            "src": "942:92:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "lastDividendPoints",
                                      "referencedDeclaration": 24,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct OTRCPartyToken.account storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 29,
                                              "type": "mapping(address => struct OTRCPartyToken.account storage ref)",
                                              "value": "users"
                                            },
                                            "id": 72,
                                            "name": "Identifier",
                                            "src": "1049:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 41,
                                              "type": "address",
                                              "value": "investor"
                                            },
                                            "id": 73,
                                            "name": "Identifier",
                                            "src": "1055:8:0"
                                          }
                                        ],
                                        "id": 74,
                                        "name": "IndexAccess",
                                        "src": "1049:15:0"
                                      }
                                    ],
                                    "id": 75,
                                    "name": "MemberAccess",
                                    "src": "1049:34:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "uint256",
                                      "value": "totalDividendPoints"
                                    },
                                    "id": 76,
                                    "name": "Identifier",
                                    "src": "1086:19:0"
                                  }
                                ],
                                "id": 77,
                                "name": "Assignment",
                                "src": "1049:56:0"
                              }
                            ],
                            "id": 78,
                            "name": "ExpressionStatement",
                            "src": "1049:56:0"
                          }
                        ],
                        "id": 79,
                        "name": "Block",
                        "src": "862:255:0"
                      }
                    ],
                    "id": 80,
                    "name": "IfStatement",
                    "src": "847:270:0"
                  },
                  {
                    "id": 81,
                    "name": "PlaceholderStatement",
                    "src": "1127:1:0"
                  }
                ],
                "id": 82,
                "name": "Block",
                "src": "785:351:0"
              }
            ],
            "id": 83,
            "name": "ModifierDefinition",
            "src": "743:393:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "overrides": null,
              "scope": 173,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 84,
                "name": "ParameterList",
                "src": "1152:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 85,
                "name": "ParameterList",
                "src": "1162:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 116,
                              "type": "function ()",
                              "value": "initialize"
                            },
                            "id": 86,
                            "name": "Identifier",
                            "src": "1171:10:0"
                          }
                        ],
                        "id": 87,
                        "name": "FunctionCall",
                        "src": "1171:12:0"
                      }
                    ],
                    "id": 88,
                    "name": "ExpressionStatement",
                    "src": "1171:12:0"
                  }
                ],
                "id": 89,
                "name": "Block",
                "src": "1162:25:0"
              }
            ],
            "id": 90,
            "name": "FunctionDefinition",
            "src": "1141:46:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8129fc1c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "overrides": null,
              "scope": 173,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 91,
                "name": "ParameterList",
                "src": "1212:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 94,
                "name": "ParameterList",
                "src": "1234:0:0"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 462,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 92,
                    "name": "Identifier",
                    "src": "1215:11:0"
                  }
                ],
                "id": 93,
                "name": "ModifierInvocation",
                "src": "1215:11:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2ccc00cd06f2ace0f77836e4513f343209c9e70f667932498770d73ce95e288d",
                                  "typeString": "literal_string \"OTRCPartyToken\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b413b19e54a88e3aedd70a1cd16d799fb0fc3856416458122abcf8d16ba063bc",
                                  "typeString": "literal_string \"OTRCPT\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 538,
                              "type": "function (string memory,string memory)",
                              "value": "__ERC20_init"
                            },
                            "id": 95,
                            "name": "Identifier",
                            "src": "1245:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f5452435061727479546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"OTRCPartyToken\"",
                              "value": "OTRCPartyToken"
                            },
                            "id": 96,
                            "name": "Literal",
                            "src": "1258:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f5452435054",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"OTRCPT\"",
                              "value": "OTRCPT"
                            },
                            "id": 97,
                            "name": "Literal",
                            "src": "1275:8:0"
                          }
                        ],
                        "id": 98,
                        "name": "FunctionCall",
                        "src": "1245:39:0"
                      }
                    ],
                    "id": 99,
                    "name": "ExpressionStatement",
                    "src": "1245:39:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_85000001000000000000_by_1",
                                  "typeString": "int_const 85000001000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 887,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 100,
                            "name": "Identifier",
                            "src": "1295:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 101,
                                "name": "Identifier",
                                "src": "1301:3:0"
                              }
                            ],
                            "id": 102,
                            "name": "MemberAccess",
                            "src": "1301:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "382e35303030303031653139",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 85000001000000000000",
                              "value": "8.5000001e19"
                            },
                            "id": 103,
                            "name": "Literal",
                            "src": "1313:12:0"
                          }
                        ],
                        "id": 104,
                        "name": "FunctionCall",
                        "src": "1295:31:0"
                      }
                    ],
                    "id": 105,
                    "name": "ExpressionStatement",
                    "src": "1295:31:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_85000001000000000000_by_1",
                                  "typeString": "int_const 85000001000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1083,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 106,
                            "name": "Identifier",
                            "src": "1342:8:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 107,
                                    "name": "ElementaryTypeName",
                                    "src": "1351:7:0"
                                  }
                                ],
                                "id": 108,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1351:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 109,
                                "name": "Literal",
                                "src": "1359:1:0"
                              }
                            ],
                            "id": 110,
                            "name": "FunctionCall",
                            "src": "1351:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 20,
                              "type": "address payable",
                              "value": "owner"
                            },
                            "id": 111,
                            "name": "Identifier",
                            "src": "1363:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "382e35303030303031653139",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 85000001000000000000",
                              "value": "8.5000001e19"
                            },
                            "id": 112,
                            "name": "Literal",
                            "src": "1370:12:0"
                          }
                        ],
                        "id": 113,
                        "name": "FunctionCall",
                        "src": "1342:41:0"
                      }
                    ],
                    "id": 114,
                    "name": "EmitStatement",
                    "src": "1337:46:0"
                  }
                ],
                "id": 115,
                "name": "Block",
                "src": "1234:157:0"
              }
            ],
            "id": 116,
            "name": "FunctionDefinition",
            "src": "1193:198:0"
          },
          {
            "attributes": {
              "functionSelector": "8391e45c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "dividendsOwing",
              "overrides": null,
              "scope": 173,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "new dividend = totalDividendPoints - investor's lastDividnedPoint\n( balance * new dividend ) / points multiplier*"
                },
                "id": 117,
                "name": "StructuredDocumentation",
                "src": "1397:137:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "investor",
                      "overrides": null,
                      "scope": 151,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 118,
                        "name": "ElementaryTypeName",
                        "src": "1564:7:0"
                      }
                    ],
                    "id": 119,
                    "name": "VariableDeclaration",
                    "src": "1564:16:0"
                  }
                ],
                "id": 120,
                "name": "ParameterList",
                "src": "1563:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 151,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 125,
                        "name": "ElementaryTypeName",
                        "src": "1652:7:0"
                      }
                    ],
                    "id": 126,
                    "name": "VariableDeclaration",
                    "src": "1652:7:0"
                  }
                ],
                "id": 127,
                "name": "ParameterList",
                "src": "1651:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 83,
                      "type": "modifier (address)",
                      "value": "updateDividend"
                    },
                    "id": 121,
                    "name": "Identifier",
                    "src": "1607:14:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": -15,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 122,
                        "name": "Identifier",
                        "src": "1622:3:0"
                      }
                    ],
                    "id": 123,
                    "name": "MemberAccess",
                    "src": "1622:10:0"
                  }
                ],
                "id": 124,
                "name": "ModifierInvocation",
                "src": "1607:26:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        129
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "newDividendPoints",
                          "overrides": null,
                          "scope": 150,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 128,
                            "name": "ElementaryTypeName",
                            "src": "1677:7:0"
                          }
                        ],
                        "id": 129,
                        "name": "VariableDeclaration",
                        "src": "1677:25:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sub",
                              "referencedDeclaration": 264,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "uint256",
                                  "value": "totalDividendPoints"
                                },
                                "id": 130,
                                "name": "Identifier",
                                "src": "1705:19:0"
                              }
                            ],
                            "id": 131,
                            "name": "MemberAccess",
                            "src": "1705:23:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "lastDividendPoints",
                              "referencedDeclaration": 24,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct OTRCPartyToken.account storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 29,
                                      "type": "mapping(address => struct OTRCPartyToken.account storage ref)",
                                      "value": "users"
                                    },
                                    "id": 132,
                                    "name": "Identifier",
                                    "src": "1743:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 119,
                                      "type": "address",
                                      "value": "investor"
                                    },
                                    "id": 133,
                                    "name": "Identifier",
                                    "src": "1749:8:0"
                                  }
                                ],
                                "id": 134,
                                "name": "IndexAccess",
                                "src": "1743:15:0"
                              }
                            ],
                            "id": 135,
                            "name": "MemberAccess",
                            "src": "1743:34:0"
                          }
                        ],
                        "id": 136,
                        "name": "FunctionCall",
                        "src": "1705:83:0"
                      }
                    ],
                    "id": 137,
                    "name": "VariableDeclarationStatement",
                    "src": "1677:111:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 127
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "div",
                              "referencedDeclaration": 344,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "mul",
                                          "referencedDeclaration": 327,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "balance",
                                              "referencedDeclaration": 22,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct OTRCPartyToken.account storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 29,
                                                      "type": "mapping(address => struct OTRCPartyToken.account storage ref)",
                                                      "value": "users"
                                                    },
                                                    "id": 138,
                                                    "name": "Identifier",
                                                    "src": "1820:5:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 119,
                                                      "type": "address",
                                                      "value": "investor"
                                                    },
                                                    "id": 139,
                                                    "name": "Identifier",
                                                    "src": "1826:8:0"
                                                  }
                                                ],
                                                "id": 140,
                                                "name": "IndexAccess",
                                                "src": "1820:15:0"
                                              }
                                            ],
                                            "id": 141,
                                            "name": "MemberAccess",
                                            "src": "1820:23:0"
                                          }
                                        ],
                                        "id": 142,
                                        "name": "MemberAccess",
                                        "src": "1820:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 129,
                                          "type": "uint256",
                                          "value": "newDividendPoints"
                                        },
                                        "id": 143,
                                        "name": "Identifier",
                                        "src": "1848:17:0"
                                      }
                                    ],
                                    "id": 144,
                                    "name": "FunctionCall",
                                    "src": "1820:46:0"
                                  }
                                ],
                                "id": 145,
                                "name": "TupleExpression",
                                "src": "1819:48:0"
                              }
                            ],
                            "id": 146,
                            "name": "MemberAccess",
                            "src": "1819:52:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17,
                              "type": "uint256",
                              "value": "pointMultiplier"
                            },
                            "id": 147,
                            "name": "Identifier",
                            "src": "1890:15:0"
                          }
                        ],
                        "id": 148,
                        "name": "FunctionCall",
                        "src": "1819:101:0"
                      }
                    ],
                    "id": 149,
                    "name": "Return",
                    "src": "1799:121:0"
                  }
                ],
                "id": 150,
                "name": "Block",
                "src": "1666:262:0"
              }
            ],
            "id": 151,
            "name": "FunctionDefinition",
            "src": "1540:388:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "2e1a7d4d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdraw",
              "overrides": null,
              "scope": 173,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 172,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 152,
                        "name": "ElementaryTypeName",
                        "src": "2278:7:0"
                      }
                    ],
                    "id": 153,
                    "name": "VariableDeclaration",
                    "src": "2278:14:0"
                  }
                ],
                "id": 154,
                "name": "ParameterList",
                "src": "2277:16:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 155,
                "name": "ParameterList",
                "src": "2301:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 156,
                            "name": "Identifier",
                            "src": "2308:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 157,
                                    "name": "Identifier",
                                    "src": "2316:3:0"
                                  }
                                ],
                                "id": 158,
                                "name": "MemberAccess",
                                "src": "2316:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "address payable",
                                  "value": "owner"
                                },
                                "id": 159,
                                "name": "Identifier",
                                "src": "2330:5:0"
                              }
                            ],
                            "id": 160,
                            "name": "BinaryOperation",
                            "src": "2316:19:0"
                          }
                        ],
                        "id": 161,
                        "name": "FunctionCall",
                        "src": "2308:28:0"
                      }
                    ],
                    "id": 162,
                    "name": "ExpressionStatement",
                    "src": "2308:28:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(bool,bytes memory)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function (bytes memory) payable returns (bool,bytes memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "call",
                                  "referencedDeclaration": null,
                                  "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 20,
                                      "type": "address payable",
                                      "value": "owner"
                                    },
                                    "id": 163,
                                    "name": "Identifier",
                                    "src": "2347:5:0"
                                  }
                                ],
                                "id": 165,
                                "name": "MemberAccess",
                                "src": "2347:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 153,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 166,
                                "name": "Identifier",
                                "src": "2365:6:0"
                              }
                            ],
                            "id": 167,
                            "name": "FunctionCallOptions",
                            "src": "2347:25:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 168,
                            "name": "Literal",
                            "src": "2373:2:0"
                          }
                        ],
                        "id": 169,
                        "name": "FunctionCall",
                        "src": "2347:29:0"
                      }
                    ],
                    "id": 170,
                    "name": "ExpressionStatement",
                    "src": "2347:29:0"
                  }
                ],
                "id": 171,
                "name": "Block",
                "src": "2301:83:0"
              }
            ],
            "id": 172,
            "name": "FunctionDefinition",
            "src": "2260:124:0"
          }
        ],
        "id": 173,
        "name": "ContractDefinition",
        "src": "228:2159:0"
      }
    ],
    "id": 174,
    "name": "SourceUnit",
    "src": "43:2344:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9174874Aec6F44524C94529bFE4944912eA6Ce46",
      "transactionHash": "0x8aff569ea12501997c9b68fbd107686d9747964a787a18cbb7eee4dd90a30fa0"
    },
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB9528688219Af3cbB8e59696C774feee0630a26D",
      "transactionHash": "0x4166e26f8283f4f664596556cbcc9cc973d00afafa61aa50b27f7419bdbc0b35"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2560dE277f434ceec031442dBBBDad9C18dF290D",
      "transactionHash": "0xbbe80be3d7f4b3a628443ad4e7026bf5f96ecc383dbdf09bc5a2ccc42860b9ad"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-03T13:24:26.136Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "dividendsOwing(address)": {
        "notice": "new dividend = totalDividendPoints - investor's lastDividnedPoint ( balance * new dividend ) / points multiplier*"
      }
    },
    "version": 1
  }
}